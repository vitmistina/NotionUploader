{
  "openapi": "3.1.0",
  "info": {
    "title": "Nutrition Logger",
    "description": "Logs food and macro data to Vit's Notion table",
    "version": "2.0.0"
  },
  "paths": {
    "/v2/api-schema": {
      "get": {
        "summary": "Get Api Schema",
        "description": "Return the OpenAPI schema for this API version.",
        "operationId": "get_api_schema_v2_api_schema_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-openai-isConsequential": false,
        "is_consequential": false
      }
    },
    "/v2/nutrition-entries": {
      "post": {
        "summary": "Create Nutrition Entry",
        "operationId": "create_nutrition_entry_v2_nutrition_entries_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NutritionEntry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-openai-isConsequential": false,
        "is_consequential": false
      }
    },
    "/v2/nutrition-entries/daily/{date}": {
      "get": {
        "summary": "List Daily Nutrition Entries",
        "operationId": "list_daily_nutrition_entries_v2_nutrition_entries_daily__date__get",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Date to fetch in YYYY-MM-DD format.",
              "title": "Date"
            },
            "description": "Date to fetch in YYYY-MM-DD format."
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "IANA timezone for local time, defaults to Prague.",
              "default": "Europe/Prague",
              "title": "Timezone"
            },
            "description": "IANA timezone for local time, defaults to Prague."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NutritionSummaryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-openai-isConsequential": false,
        "is_consequential": false
      }
    },
    "/v2/nutrition-entries/period": {
      "get": {
        "summary": "List Nutrition Entries By Period",
        "operationId": "list_nutrition_entries_by_period_v2_nutrition_entries_period_get",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Start date (inclusive) in YYYY-MM-DD format.",
              "title": "Start Date"
            },
            "description": "Start date (inclusive) in YYYY-MM-DD format."
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "End date (inclusive) in YYYY-MM-DD format.",
              "title": "End Date"
            },
            "description": "End date (inclusive) in YYYY-MM-DD format."
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "IANA timezone for local time, defaults to Prague.",
              "default": "Europe/Prague",
              "title": "Timezone"
            },
            "description": "IANA timezone for local time, defaults to Prague."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NutritionSummaryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-openai-isConsequential": false,
        "is_consequential": false
      }
    },
    "/v2/body-measurements": {
      "get": {
        "summary": "List Body Measurements",
        "description": "Get body measurements and linear regression trends.",
        "operationId": "list_body_measurements_v2_body_measurements_get",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days of measurements to retrieve.",
              "default": 7,
              "title": "Days"
            },
            "description": "Number of days of measurements to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BodyMeasurementsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-openai-isConsequential": false,
        "is_consequential": false
      }
    },
    "/v2/workout-logs": {
      "get": {
        "summary": "List Logged Workouts",
        "operationId": "list_logged_workouts_v2_workout_logs_get",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days of logged workouts to retrieve.",
              "default": 7,
              "title": "Days"
            },
            "description": "Number of days of logged workouts to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkoutLog"
                  },
                  "title": "Response List Logged Workouts V2 Workout Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-openai-isConsequential": false,
        "is_consequential": false
      }
    },
    "/v2/workout-logs/{page_id}/sync": {
      "post": {
        "summary": "Sync Workout Metrics",
        "operationId": "sync_workout_metrics_v2_workout_logs__page_id__sync_post",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Page Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-openai-isConsequential": false,
        "is_consequential": false
      }
    },
    "/v2/workout-logs/manual": {
      "post": {
        "summary": "Create Manual Workout",
        "operationId": "create_manual_workout_v2_workout_logs_manual_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualWorkoutSubmission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "x-openai-isConsequential": false,
        "is_consequential": false
      }
    },
    "/v2/summary-advice": {
      "get": {
        "summary": "Get Summary Advice",
        "operationId": "get_summary_advice_v2_summary_advice_get",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of days of data to retrieve.",
              "default": 7,
              "title": "Days"
            },
            "description": "Number of days of data to retrieve."
          },
          {
            "name": "timezone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "IANA timezone for local time, defaults to Prague.",
              "default": "Europe/Prague",
              "title": "Timezone"
            },
            "description": "IANA timezone for local time, defaults to Prague."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SummaryAdvice"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-openai-isConsequential": false,
        "is_consequential": false
      }
    }
  },
  "components": {
    "schemas": {
      "AthleteMetrics": {
        "properties": {
          "ftp": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ftp"
          },
          "weight": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight"
          },
          "max_hr": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Hr"
          }
        },
        "type": "object",
        "title": "AthleteMetrics",
        "description": "Latest athlete-level metrics such as FTP and max heart rate."
      },
      "BodyMeasurement": {
        "properties": {
          "measurement_time": {
            "type": "string",
            "format": "date-time",
            "title": "Measurement Time"
          },
          "weight_kg": {
            "type": "number",
            "title": "Weight Kg",
            "description": "Body weight in kilograms"
          },
          "fat_mass_kg": {
            "type": "number",
            "title": "Fat Mass Kg",
            "description": "Total fat mass in kilograms"
          },
          "muscle_mass_kg": {
            "type": "number",
            "title": "Muscle Mass Kg",
            "description": "Skeletal muscle mass in kilograms"
          },
          "bone_mass_kg": {
            "type": "number",
            "title": "Bone Mass Kg",
            "description": "Bone mass in kilograms"
          },
          "hydration_kg": {
            "type": "number",
            "title": "Hydration Kg",
            "description": "Body water content in kilograms"
          },
          "fat_free_mass_kg": {
            "type": "number",
            "title": "Fat Free Mass Kg",
            "description": "Fat-free mass (muscles, bones, tissues) in kilograms"
          },
          "body_fat_percent": {
            "type": "number",
            "title": "Body Fat Percent",
            "description": "Body fat percentage"
          },
          "device_name": {
            "type": "string",
            "title": "Device Name",
            "description": "Name of the measuring device"
          },
          "moving_average_7d": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BodyMeasurementAverages"
              },
              {
                "type": "null"
              }
            ],
            "description": "7-day moving averages for the measurement metrics"
          }
        },
        "type": "object",
        "required": [
          "measurement_time",
          "weight_kg",
          "fat_mass_kg",
          "muscle_mass_kg",
          "bone_mass_kg",
          "hydration_kg",
          "fat_free_mass_kg",
          "body_fat_percent",
          "device_name"
        ],
        "title": "BodyMeasurement",
        "description": "A human-readable representation of body measurements from a smart scale.",
        "example": {
          "body_fat_percent": 21.5,
          "bone_mass_kg": 3.845,
          "device_name": "Withings Body+",
          "fat_free_mass_kg": 21.507,
          "fat_mass_kg": 14.8,
          "hydration_kg": 54.016,
          "measurement_time": "2025-08-09T08:01:06",
          "muscle_mass_kg": 51.27,
          "weight_kg": 68.816
        }
      },
      "BodyMeasurementAverages": {
        "properties": {
          "weight_kg": {
            "type": "number",
            "title": "Weight Kg",
            "description": "7-day average of body weight in kilograms"
          },
          "fat_mass_kg": {
            "type": "number",
            "title": "Fat Mass Kg",
            "description": "7-day average of total fat mass in kilograms"
          },
          "muscle_mass_kg": {
            "type": "number",
            "title": "Muscle Mass Kg",
            "description": "7-day average of skeletal muscle mass in kilograms"
          },
          "bone_mass_kg": {
            "type": "number",
            "title": "Bone Mass Kg",
            "description": "7-day average of bone mass in kilograms"
          },
          "hydration_kg": {
            "type": "number",
            "title": "Hydration Kg",
            "description": "7-day average of body water content in kilograms"
          },
          "fat_free_mass_kg": {
            "type": "number",
            "title": "Fat Free Mass Kg",
            "description": "7-day average of fat-free mass (muscles, bones, tissues) in kilograms"
          },
          "body_fat_percent": {
            "type": "number",
            "title": "Body Fat Percent",
            "description": "7-day average of body fat percentage"
          }
        },
        "type": "object",
        "required": [
          "weight_kg",
          "fat_mass_kg",
          "muscle_mass_kg",
          "bone_mass_kg",
          "hydration_kg",
          "fat_free_mass_kg",
          "body_fat_percent"
        ],
        "title": "BodyMeasurementAverages",
        "description": "7-day moving averages for body measurements."
      },
      "BodyMeasurementsResponse": {
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/BodyMeasurement"
            },
            "type": "array",
            "title": "Measurements"
          },
          "trends": {
            "$ref": "#/components/schemas/BodyMetricTrends"
          }
        },
        "type": "object",
        "required": [
          "measurements",
          "trends"
        ],
        "title": "BodyMeasurementsResponse",
        "description": "Collection of measurements with derived linear regression trends."
      },
      "BodyMetricTrends": {
        "properties": {
          "weight_kg": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LinearRegressionResult"
              },
              {
                "type": "null"
              }
            ]
          },
          "body_fat_percent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LinearRegressionResult"
              },
              {
                "type": "null"
              }
            ]
          },
          "muscle_mass_kg": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LinearRegressionResult"
              },
              {
                "type": "null"
              }
            ]
          },
          "fat_mass_kg": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LinearRegressionResult"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "BodyMetricTrends",
        "description": "Linear regression trends for core body metrics."
      },
      "DailyNutritionSummaryWithEntries": {
        "properties": {
          "date": {
            "type": "string",
            "title": "Date"
          },
          "daily_calories_sum": {
            "type": "integer",
            "title": "Daily Calories Sum"
          },
          "daily_protein_g_sum": {
            "type": "number",
            "title": "Daily Protein G Sum"
          },
          "daily_carbs_g_sum": {
            "type": "number",
            "title": "Daily Carbs G Sum"
          },
          "daily_fat_g_sum": {
            "type": "number",
            "title": "Daily Fat G Sum"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/NutritionEntry"
            },
            "type": "array",
            "title": "Entries"
          }
        },
        "type": "object",
        "required": [
          "date",
          "daily_calories_sum",
          "daily_protein_g_sum",
          "daily_carbs_g_sum",
          "daily_fat_g_sum",
          "entries"
        ],
        "title": "DailyNutritionSummaryWithEntries",
        "description": "Daily summary extended with the list of individual entries."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "LinearRegressionResult": {
        "properties": {
          "slope": {
            "type": "number",
            "title": "Slope"
          },
          "intercept": {
            "type": "number",
            "title": "Intercept"
          },
          "r2": {
            "type": "number",
            "title": "R2"
          }
        },
        "type": "object",
        "required": [
          "slope",
          "intercept",
          "r2"
        ],
        "title": "LinearRegressionResult",
        "description": "Slope, intercept, and coefficient of determination for a metric."
      },
      "ManualWorkoutSubmission": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-readable workout name or summary."
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time",
            "description": "UTC timestamp when the workout began."
          },
          "duration_minutes": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Duration Minutes",
            "description": "Total session duration expressed in minutes."
          },
          "average_heartrate": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Average Heartrate",
            "description": "Average heart rate recorded for the session."
          },
          "max_heartrate": {
            "type": "number",
            "exclusiveMinimum": 0.0,
            "title": "Max Heartrate",
            "description": "Maximum heart rate recorded for the session."
          },
          "distance_meters": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Distance Meters",
            "description": "Optional distance covered in meters."
          },
          "elevation_meters": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Elevation Meters",
            "description": "Optional elevation gain in meters."
          },
          "calories": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Calories",
            "description": "Estimated calories expended during the session."
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes",
            "description": "Free-form notes or description of the workout."
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "Optional numeric identifier used for deduplicating entries."
          },
          "average_cadence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Cadence",
            "description": "Optional average cadence data."
          },
          "average_watts": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Watts",
            "description": "Optional average power in watts."
          },
          "weighted_average_watts": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weighted Average Watts",
            "description": "Optional weighted average power in watts."
          },
          "kilojoules": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kilojoules",
            "description": "Optional total work in kilojoules."
          },
          "tss": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tss",
            "description": "Optional Training Stress Score if already calculated."
          },
          "intensity_factor": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Intensity Factor",
            "description": "Optional intensity factor if already calculated."
          },
          "hr_drift_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hr Drift Percent",
            "description": "Optional heart rate drift percentage estimate."
          },
          "vo2max_minutes": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vo2Max Minutes",
            "description": "Optional minutes spent at/above VO\u2082 max intensity."
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_time",
          "duration_minutes",
          "average_heartrate",
          "max_heartrate"
        ],
        "title": "ManualWorkoutSubmission",
        "description": "Payload describing a manually logged workout extracted by a GPT agent."
      },
      "NutritionEntry": {
        "properties": {
          "food_item": {
            "type": "string",
            "title": "Food Item"
          },
          "date": {
            "type": "string",
            "title": "Date"
          },
          "calories": {
            "type": "integer",
            "title": "Calories"
          },
          "protein_g": {
            "type": "number",
            "title": "Protein G"
          },
          "carbs_g": {
            "type": "number",
            "title": "Carbs G"
          },
          "fat_g": {
            "type": "number",
            "title": "Fat G"
          },
          "meal_type": {
            "type": "string",
            "enum": [
              "Breakfast",
              "Lunch",
              "Dinner",
              "Snack",
              "Pre-workout",
              "During-workout",
              "Post-workout"
            ],
            "title": "Meal Type"
          },
          "notes": {
            "type": "string",
            "minLength": 1,
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "food_item",
          "date",
          "calories",
          "protein_g",
          "carbs_g",
          "fat_g",
          "meal_type",
          "notes"
        ],
        "title": "NutritionEntry"
      },
      "NutritionSummaryResponse": {
        "properties": {
          "local_time": {
            "type": "string",
            "format": "date-time",
            "title": "Local Time",
            "description": "Current local time with timezone"
          },
          "part_of_day": {
            "type": "string",
            "enum": [
              "night",
              "morning",
              "afternoon",
              "evening"
            ],
            "title": "Part Of Day"
          },
          "days": {
            "items": {
              "$ref": "#/components/schemas/DailyNutritionSummaryWithEntries"
            },
            "type": "array",
            "title": "Days"
          }
        },
        "type": "object",
        "required": [
          "local_time",
          "part_of_day",
          "days"
        ],
        "title": "NutritionSummaryResponse",
        "description": "Time contextualized response containing one or more daily summaries."
      },
      "OperationStatus": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Short status indicator for the operation outcome."
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "Identifier of the resource affected by the operation, when relevant."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "OperationStatus",
        "description": "Normalized status payload returned by mutation endpoints."
      },
      "SummaryAdvice": {
        "properties": {
          "local_time": {
            "type": "string",
            "format": "date-time",
            "title": "Local Time",
            "description": "Current local time with timezone"
          },
          "part_of_day": {
            "type": "string",
            "enum": [
              "night",
              "morning",
              "afternoon",
              "evening"
            ],
            "title": "Part Of Day"
          },
          "nutrition": {
            "items": {
              "$ref": "#/components/schemas/DailyNutritionSummaryWithEntries"
            },
            "type": "array",
            "title": "Nutrition"
          },
          "metrics": {
            "items": {
              "$ref": "#/components/schemas/BodyMeasurement"
            },
            "type": "array",
            "title": "Metrics"
          },
          "metric_trends": {
            "$ref": "#/components/schemas/BodyMetricTrends"
          },
          "workouts": {
            "items": {
              "$ref": "#/components/schemas/WorkoutLog"
            },
            "type": "array",
            "title": "Workouts"
          },
          "athlete_metrics": {
            "$ref": "#/components/schemas/AthleteMetrics"
          }
        },
        "type": "object",
        "required": [
          "local_time",
          "part_of_day",
          "nutrition",
          "metrics",
          "metric_trends",
          "workouts",
          "athlete_metrics"
        ],
        "title": "SummaryAdvice",
        "description": "Combined nutrition, body metrics, workout data, and athlete metrics."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "WorkoutLog": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "date": {
            "type": "string",
            "title": "Date"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "distance_m": {
            "type": "number",
            "title": "Distance M"
          },
          "elevation_m": {
            "type": "number",
            "title": "Elevation M"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "average_cadence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Cadence"
          },
          "average_watts": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Watts"
          },
          "weighted_average_watts": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weighted Average Watts"
          },
          "kilojoules": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kilojoules"
          },
          "kcal": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kcal"
          },
          "average_heartrate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Heartrate"
          },
          "max_heartrate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Heartrate"
          },
          "hr_drift_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hr Drift Percent"
          },
          "vo2max_minutes": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vo2Max Minutes"
          },
          "tss": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tss"
          },
          "intensity_factor": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Intensity Factor"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "name",
          "date",
          "duration_s",
          "distance_m",
          "elevation_m",
          "type"
        ],
        "title": "WorkoutLog",
        "description": "Representation of a workout stored in Notion for LLM consumption."
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  },
  "servers": [
    {
      "url": "https://notionuploader-groa.onrender.com"
    }
  ]
}